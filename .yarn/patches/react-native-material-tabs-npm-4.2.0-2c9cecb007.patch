diff --git a/src/components/MaterialTabs.tsx b/src/components/MaterialTabs.tsx
index 9d35977c388e136aed9f46dff2cb115c86f37df8..43a86045aba8d46b8be92cd3283f2f195f318418 100644
--- a/src/components/MaterialTabs.tsx
+++ b/src/components/MaterialTabs.tsx
@@ -1,4 +1,4 @@
-import React, { useState, useEffect, useCallback } from 'react';
+import React, { useState, useEffect, useCallback } from "react";
 import {
   Animated,
   ScrollView,
@@ -7,15 +7,15 @@ import {
   StyleProp,
   TextStyle,
   I18nManager,
-} from 'react-native';
+} from "react-native";
 
-import Tab from './Tab';
-import Indicator from './Indicator';
-import { ContentType } from './Tab/Tab';
+import Tab from "./Tab";
+import Indicator from "./Indicator";
+import { ContentType } from "./Tab/Tab";
 
-import { Bar, TabTrack } from '../lib/styles';
+import { Bar, TabTrack } from "../lib/styles";
 
-interface Props extends Pick<ScrollViewProps, 'keyboardShouldPersistTaps'> {
+interface Props extends Pick<ScrollViewProps, "keyboardShouldPersistTaps"> {
   allowFontScaling: boolean;
   selectedIndex: number;
   barColor: string;
@@ -33,24 +33,24 @@ interface Props extends Pick<ScrollViewProps, 'keyboardShouldPersistTaps'> {
 }
 
 const getKeyForTab = (item: ContentType) =>
-  typeof item === 'string' ? item : item.key;
+  typeof item === "string" ? item : item.key;
 
 const MaterialTabs: React.FC<Props> = ({
   items,
-  selectedIndex,
-  scrollable,
-  keyboardShouldPersistTaps,
-  barHeight,
+  selectedIndex = 0,
+  scrollable = false,
+  keyboardShouldPersistTaps = "never",
+  barHeight = 48,
   onChange,
-  allowFontScaling,
-  activeTextColor,
+  allowFontScaling = true,
+  activeTextColor = "#fff",
   textStyle,
   activeTextStyle,
-  inactiveTextColor,
-  uppercase,
-  indicatorColor,
-  barColor,
-  indicatorHeight,
+  inactiveTextColor = "rgba(255, 255, 255, 0.7)",
+  uppercase = true,
+  indicatorColor = "#fff",
+  barColor = "#13897b",
+  indicatorHeight = 2,
 }) => {
   const [tabWidth, setTabWidth] = useState(0);
   const [barWidth, setBarWidth] = useState(0);
@@ -135,7 +135,7 @@ const MaterialTabs: React.FC<Props> = ({
         ref={bar}
         barColor={barColor}
         barHeight={barHeight}
-        onLayout={event => getTabWidth(event.nativeEvent.layout.width)}
+        onLayout={(event) => getTabWidth(event.nativeEvent.layout.width)}
       >
         <ScrollView
           horizontal
@@ -175,18 +175,4 @@ const MaterialTabs: React.FC<Props> = ({
   );
 };
 
-MaterialTabs.defaultProps = {
-  allowFontScaling: true,
-  selectedIndex: 0,
-  barColor: '#13897b',
-  barHeight: 48,
-  activeTextColor: '#fff',
-  indicatorColor: '#fff',
-  inactiveTextColor: 'rgba(255, 255, 255, 0.7)',
-  scrollable: false,
-  uppercase: true,
-  keyboardShouldPersistTaps: 'never',
-  indicatorHeight: 2,
-};
-
 export default MaterialTabs;
diff --git a/src/components/Tab/Tab.tsx b/src/components/Tab/Tab.tsx
index 934586044bbeac2331c7f457040bbf05e8dfeced..96d2d413a951e0104d33e9d93cee79c5cf8ab7ea 100644
--- a/src/components/Tab/Tab.tsx
+++ b/src/components/Tab/Tab.tsx
@@ -1,6 +1,6 @@
-import React from 'react';
-import { StyleSheet, StyleProp, TextStyle } from 'react-native';
-import { TabText, TabBody, TabButton } from './styles';
+import React from "react";
+import { StyleSheet, StyleProp, TextStyle } from "react-native";
+import { TabText, TabBody, TabButton } from "./styles";
 
 export type ContentType = string | React.ReactElement;
 
@@ -21,7 +21,7 @@ interface TabProps {
 const Tab = ({
   allowFontScaling,
   activeTextColor,
-  active,
+  active = false,
   onPress,
   content,
   inActiveTextColor,
@@ -36,7 +36,7 @@ const Tab = ({
   return (
     <TabButton onPress={onPress} tabWidth={tabWidth}>
       <TabBody tabHeight={tabHeight}>
-        {typeof content === 'string' ? (
+        {typeof content === "string" ? (
           <TabText
             color={color}
             style={StyleSheet.flatten([textStyle, activeTextStyle])}
@@ -54,8 +54,4 @@ const Tab = ({
   );
 };
 
-Tab.defaultProps = {
-  active: false,
-};
-
 export default Tab;
